@model EhbEvo.Models.Feedback
@using Microsoft.AspNet.Identity;

@{
    ViewBag.Title = "Details";
}

<div class="container">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="~/Feed">Feed</a></li>
            <li class="breadcrumb-item active" aria-current="page">FeedBack Details</li>
        </ol>
    </nav>
    <h1 class="text-dark">Feedback Details</h1>
    <hr />
    <div id="show-post-btn" class="btn-dark btn-lg d-inline-block">Bekijk originele post</div><hr />
    <div id="org-post" hidden="hidden">
        <h2 class="text-dark shadow h3-padding">Originele Post</h2>

        <div class="row">

            <!-- Post Content Column -->
            <div class="col-lg-8">

                <!-- Title -->
                <h3 class="mt-4">@Model.Post.Title</h3>

                <!-- Category -->
                <p>
                    <span class="lead text-dark">@Model.Post.PostCategory - @Model.Post.PostType</span><hr>
                    Gepost op <span class="text-secondary">@Model.Post.Date)</span> door <span class="text-dark">@Model.Post.User.FirstName @Model.Post.User.LastName</span>
                </p>
                <hr>

                <!-- Preview Image -->
                <img class="img-fluid rounded img-post" src="@Model.Post.ImgUrl" alt="">

                <hr>

                <!-- Post Content -->
                @Html.Raw(Model.Post.Content)

            </div>

        </div>
        <!-- /.row -->
        <hr />
    </div>
    <div>
        <h2 class="text-dark shadow h3-padding" id="feedback-begin">Gegeven Feedback</h2>
        <div class="row">
            <!-- Post Content Column -->
            <div class="col-lg-8">

                <!-- Title -->
                <h3 class="mt-4">@Html.DisplayFor(model => model.Title)</h3>
                <p class="lead">
                    Gepost op <span class="text-secondary">@Html.DisplayFor(model => model.Date)</span> door <span class="text-dark">@Html.DisplayFor(model => model.User.FirstName) @Html.DisplayFor(model => model.User.LastName)</span>
                    <span class="text-info">
                        @if (Model.Rating != null)
                        {
                            <text><span class="text-dark"> - </span> Rating: </text>@Html.DisplayFor(model => model.Rating)<text>/10</text>
                        }

                    </span>
                </p><hr>

                <!-- Post Content -->
                @Html.Raw(@Model.Content)
                @if (Model.Comments.Count() == 0)
                {
                    <h5 class="text-dark shadow h3-padding">Commentaar</h5><br />
                    <p>Er zijn geen comments op deze feedback</p>
                    <div class="btn-secondary btn d-inline-block text-white" style="opacity:0.75;">@Html.ActionLink(linkText: "Plaats Commentaar", actionName: "Create", controllerName: "CommentsF", routeValues: new { feedbackId = Model.Id }, htmlAttributes: new { @class = "text-white" })</div><hr />
                }
                else
                {
                    <div id="show-comments-btn" class="btn-secondary btn d-inline-block">Toon Commentaar</div><hr />
                }

                <div id="comments" hidden="hidden">
                    <h5 class="text-dark shadow h3-padding">Commentaar</h5><br />
                    @foreach (var comment in Model.Comments)
                    {
                        <div class="media mt-3">
                            <img class="mr-3 feedimage" src="~/Content/images/comment.png">
                            <div class="media-body">
                                <h5 class="mt-0">@comment.Title - <small class="text-dark">@comment.User.FirstName @comment.User.LastName</small><small> op </small><small class="text-secondary">@comment.Date</small></h5>
                                @Html.Raw(comment.Content)
                            </div>
                            <div class="media-right align-self-center">
                                @if (comment.User.Id.Equals(@System.Web.HttpContext.Current.User.Identity.GetUserId()) || System.Web.HttpContext.Current.User.IsInRole("Admin"))
                                {
                                    <span class="btn-info btn-sm btn-block text-white text-center" style="opacity:0.75;">@Html.ActionLink(linkText: "Bewerk", actionName: "Edit", controllerName: "CommentsF", routeValues: new { Id = comment.Id }, htmlAttributes: new { @class = "text-white text-center", style = "width:100%" })</span><br />
                                    <span class="btn-danger btn-sm btn-block text-white text-center" style="opacity:0.75;">@Html.ActionLink(linkText: "Verwijder", actionName: "Delete", controllerName: "CommentsF", routeValues: new { Id = comment.Id }, htmlAttributes: new { @class = "text-white text-center", style = "width:100%" })</span>
                                }
                            </div>
                        </div><hr />
                    }
                    <div class="btn-secondary btn d-inline-block text-white" style="opacity:0.75;">@Html.ActionLink(linkText: "Plaats Commentaar", actionName: "Create", controllerName: "CommentsF", routeValues: new { feedbackId = Model.Id }, htmlAttributes: new { @class = "text-white" })</div><hr />
                </div>

            </div>

        </div>
    </div>
    <div class="card-footer postactionlinks">
        <span class="badge badge-pill badge-dark">@Html.ActionLink("Terug naar overzicht", "Index", "Feed")</span> |
        <span class="badge badge-pill badge-dark">@Html.ActionLink("Bewerk", "Edit", new { id = Model.Id })</span> |
        <span class="badge badge-pill badge-dark">@Html.ActionLink("Verwijder", "Delete", new { id = Model.Id })</span>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/js/summernote-convert.js")
    @Scripts.Render("~/js/showhidepost.js")
    @Scripts.Render("~/js/showhidecomments.js")
}